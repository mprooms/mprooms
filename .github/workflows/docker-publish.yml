name: Docker

on:
  push:
    branches:
      - master

  # Run tests for any PRs.
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Test backend image build
        uses: docker/build-push-action@v1
        with:
          path: backend
          push: false

      - name: Test frontend image build
        uses: docker/build-push-action@v1
        with:
          path: frontend
          push: false

      - name: Test nginx image build
        uses: docker/build-push-action@v1
        with:
          path: nginx
          push: false

      # Future work: Run "docker-compose build" instead?

  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build and push backend image
        uses: docker/build-push-action@v1
        with:
          username: mproomsci
          password: ${{ secrets.DOCKER_MPROOMSCI_TOKEN }}
          tag_with_ref: true
          tag_with_sha: true
          repository: mprooms/backend
          path: backend

      - name: Build and push frontend image
        uses: docker/build-push-action@v1
        with:
          username: mproomsci
          password: ${{ secrets.DOCKER_MPROOMSCI_TOKEN }}
          tag_with_ref: true
          tag_with_sha: true
          repository: mprooms/frontend
          path: frontend

      - name: Build and push nginx image
        uses: docker/build-push-action@v1
        with:
          username: mproomsci
          password: ${{ secrets.DOCKER_MPROOMSCI_TOKEN }}
          tag_with_ref: true
          tag_with_sha: true
          repository: mprooms/nginx
          path: nginx

  deploy:
    needs: push
    runs-on: ubuntu-latest

    # Do not run this for PRs
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
      - name: Deploy via SSH
        run: |
          umask 0077
          mkdir ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY_MPROOMS_VM }}" > ~/.ssh/id_rsa
          echo -e "Host ${{ secrets.MASTER_DEPLOYMENT_HOSTNAME }}\nUser ubuntu\nStrictHostKeyChecking=no" > ~/.ssh/config

          # Shut down existing deployment (if possible)
          ssh ${{ secrets.MASTER_DEPLOYMENT_HOSTNAME }} bash -c "'if [[ -f docker-compose.yaml ]]; then docker-compose down --remove-orphans; fi'"

          # Copy YAML onto target host
          scp docker-compose.yaml ${{ secrets.MASTER_DEPLOYMENT_HOSTNAME }}:

          # Deploy current version
          export MPROOMS_VERSION=sha-${GITHUB_SHA::8}
          ssh -o SendEnv=MPROOMS_VERSION ${{ secrets.MASTER_DEPLOYMENT_HOSTNAME }} docker-compose up -d
