name: Docker

on:
  push:
    branches:
      - master

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: dummy

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          # No tests while testing :-)
          exit 0
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    # While testing, just always push:
    # if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        # While testing, just pull an alpine image:
        run: docker pull alpine && docker tag alpine $IMAGE_NAME
        # run: docker build . --file Dockerfile --tag $IMAGE_NAME

      # - name: Log into registry
        # run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u mprooms --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=mprooms/$IMAGE_NAME

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION

      - name: Push to Docker Hub
        uses: docker/build-push-action@v1
        with:
          username: mproomsci
          password: ${{ secrets.DOCKER_MPROOMSCI_TOKEN }}
          repository: mprooms/dummy
          tag_with_ref: true
